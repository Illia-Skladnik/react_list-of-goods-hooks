{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","orderedGoods","goods","visibleGoods","ALPABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAuBKA,E,0EAlBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAQGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA9BD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKL,EAASY,QACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAME,cAAcD,MACzD,MAEF,KAAKf,EAASiB,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMI,OAASH,EAAMG,UAG5D,KAAKlB,EAASI,MAShB,OAJIG,GACFI,EAAaQ,UAGRR,EAMcS,CACnBnB,EACA,CAAEI,WAAUE,eAGd,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYlB,IAAaL,EAASY,UAGtCY,QAAS,WACPlB,EAAYN,EAASY,UATzB,iCAeA,wBACEU,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYlB,IAAaL,EAASiB,SAGtCO,QAAS,WACPlB,EAAYN,EAASiB,SATzB,4BAeA,wBACEK,KAAK,SAELD,UAAWE,IAAW,oBAAqB,CAAE,YAAahB,IAC1DiB,QAAS,WACPhB,GAAeD,IALnB,sBAWEF,IAAaL,EAASI,MAAQG,IAE1B,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAYN,EAASI,MACrBI,GAAc,IALlB,sBAaR,6BAEIC,EAAagB,KAAI,SAACC,GAAD,OACf,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC3HrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.10384ffa.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((good1, good2) => (good1.localeCompare(good2)));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => (good1.length - good2.length));\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const orderedGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPABET,\n            },\n          )}\n          onClick={() => {\n            setSortType(SortType.ALPABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          // eslint-disable-next-line max-len\n          className={classNames('button is-warning', { 'is-light': !isReversed })}\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  setSortType(SortType.NONE);\n                  setIsReversed(false);\n                }}\n              >\n                Reset\n              </button>\n            )}\n      </div>\n\n      <ul>\n        {\n          orderedGoods.map((good) => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}