{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPABET","sort","good1","good2","localeCompare","LENGTH","length","NONE","reverse","console","log","App","useState","setSortType","setIsReversed","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAuBKA,E,0EAlBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAERC,EAAY,YAAOH,GAEvB,OAAQC,GACN,KAAKJ,EAASO,QACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAME,cAAcD,MACzD,MAEF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMI,OAASH,EAAMG,UAC1D,MAEF,KAAKb,EAASc,KACZR,EAAY,YAAOH,GAcvB,OAPIE,GACFC,EAAaS,UAIfC,QAAQC,IAAIb,EAAUC,GAEfC,G,SApCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAuCE,IAAMkB,EAAgB,WAC3B,MAAgCC,mBAASnB,EAASc,MAAlD,mBAAOV,EAAP,KAAiBgB,EAAjB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOd,EAAP,KAAmBgB,EAAnB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SAELD,UAAWE,IAAW,iBAAkB,CAAE,WAAYpB,IAAaJ,EAASO,UAC5EkB,QAAS,WACPL,EAAYpB,EAASO,UALzB,iCAWA,wBACEgB,KAAK,SAELD,UAAWE,IAAW,oBAAqB,CAAE,WAAYpB,IAAaJ,EAASY,SAC/Ea,QAAS,WACPL,EAAYpB,EAASY,SALzB,4BAWA,wBACEW,KAAK,SAELD,UAAWE,IAAW,oBAAqB,CAAE,YAAanB,IAC1DoB,QAAS,WACPJ,GAAehB,IALnB,sBAYGD,IAAaJ,EAASc,MAAQT,IAE3B,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPL,EAAYpB,EAASc,MACrBO,GAAc,IALlB,sBAcR,6BAGInB,EAAkBD,EAAiB,CAAEG,WAAUC,eAAcqB,KAAI,SAACC,GAAD,OAC/D,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCxHrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f0455ea7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((good1, good2) => (good1.localeCompare(good2)));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => (good1.length - good2.length));\n      break;\n\n    case SortType.NONE:\n      visibleGoods = [...goods];\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          // eslint-disable-next-line max-len\n          className={classNames('button is-info', { 'is-light': sortType !== SortType.ALPABET })}\n          onClick={() => {\n            setSortType(SortType.ALPABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          // eslint-disable-next-line max-len\n          className={classNames('button is-success', { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          // eslint-disable-next-line max-len\n          className={classNames('button is-warning', { 'is-light': !isReversed })}\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortType !== SortType.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  setSortType(SortType.NONE);\n                  setIsReversed(false);\n                }}\n              >\n                Reset\n              </button>\n            )\n        }\n      </div>\n\n      <ul>\n        {\n          // eslint-disable-next-line max-len\n          getReorderedGoods(goodsFromServer, { sortType, isReversed }).map((good) => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}